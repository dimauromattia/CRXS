**********
*  CRXS  *
**********


This software package is developed to easily calculate cross sections (XS) for the 
production of antiprotons and antideuteron as required in cosmic-ray (CR) physics.
The package is based on c++ and builds all functions into a library. Furthermore, 
it provides an interface to python. 

The library named CRXS is intalled to cpp/lib and
the header files are saved in cpp/include.


To install this sofware do the following.

**********************
* Required software: *
**********************

- gsl 
- cmake 
- swig     (optional)
- python 2 (optional)
- python 3 (optional)

If you install the python package make sure your python version
contains the following packages:
   * numpy
   * scipy
   * matplotlib


**********************
* Build the software *
**********************

The c++ library is build with cmake and the python interface is created by swig.
All commands to build the software are summarised in the Makefile. If you want 
to build everything, simply use

$ make

Otherwise you can use the options: 
  1) build, to build only the c++ library
  2) example, to build the example.cpp which links to the CRXS library
  3) debug, to build the c++ library with debug symbols

If you want to build only the python 2 or 3 use:

$ make build
$ make python

or

$ make build
$ make python_three

To uninstall everything use

$ make clean


If you want to link the python package to your site path use the
script

$ ./link_python_package.sh

and follow the instruction. You have to specify your site path manuelly.
To find out your path you may need the command ($ python -m site).

If you do not want to link the package to your python version you have
to create a symbolic link of the py2 or py3 directory in the directory 
where you want to use the package. 

$ ln -s PATH_TO_CRXS/py2 CRXS

To include the package use

import CRXS.XS_wrapper
import CRXS.XS_tools


*********************
* Build docu:       *
*********************

Go to the folder documentation and build it by

$ doxygen Doxyfile

Open the file html/index.html 

We recommend to build the documentation before building the software package.

*********************
* Build project:    *
*********************

On a Mac with Xcode you may build a project by
  1) creating a folder in the directory cpp (e.g. xcode) and change into this new directory. Then type
  2) $ cmake -G Xcode ..





